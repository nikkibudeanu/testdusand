import type { Config } from "tailwindcss";

export default {
  theme: {
    extend: {
      colors: {
    {[ let brand = ds.currentBrand() /]}
    {[ const colorGroup = ds.tokenGroupTreeByType("Color", brand.id) /]}
    {[ traverse colorGroup property subgroups into subgroup ]}
        {[ if !subgroup.isRoot ]}
        {[ const tokens = ds.tokensByGroupId(subgroup.id) /]}
        {[ if tokens.length !== 0 ]}
        '{{ readableGroupName(subgroup)}}': {
        {[ for token in tokens ]}
            {[ let tokenName = cleanString(token.name) /]}
            "{{ ((tokenName === "main") ? "DEFAULT" : tokenName) }}": "var(--{[ inject "rendered-name" context token /]})", {[ inject "rendered-description" context token /]}

        {[/]}
        },
        {[/]}
        {[else]}
        {[ const tokens = ds.tokensByGroupId(subgroup.id) /]}
        {[ for token in tokens ]}
        {[ let tokenName = token.name.replacing("$", "").lowercased().replacing(" ", "-") /]}
        "{{ ((tokenName === "main") ? "DEFAULT" : tokenName) }}": "var(--{[ inject "rendered-name" context token /]})", {[ inject "rendered-description" context token /]}

        {[/]}
      {[/]}
    {[/]}
      },
      boxShadow: {
        {[ const shadowTokens = ds.tokensByType("Shadow", brand.id) /]}
        {[ for token in shadowTokens ]}
        {[ if (!token.isVirtual) ]}
            {[ let tokenName = token.name.replacing("$", "").replacing(" ", "-") /]}
            "{{ ((tokenName === "main") ? "DEFAULT" : tokenName) }}": "var(--{[ inject "rendered-name" context token /]})", {[ inject "rendered-description" context token /]}

        {[/]}
        {[/]}
      }
    }
  }
} satisfies Partial<Config>;